{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\choko\\\\Projects\\\\bnp chatbot\\\\src\\\\components\\\\chatbot\\\\BnpChatbot.js\";\nimport React from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport moment from \"moment\";\n\nfunction checkDateValidity(value) {\n  const dateEntered = value;\n\n  if (moment(dateEntered, \"DD.MM.YYYY\", true).isValid() && moment(dateEntered, \"DD.MM.YYYY\", true) < moment.now()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction BnpChatbot(props) {\n  const config = {\n    width: \"300px\",\n    height: \"400px\",\n    floating: true\n  };\n  let gender = steps.gender.value;\n  const steps = [{\n    id: \"Greet\",\n    message: \"Hello, Welcome to our BNP Chatbot\",\n    trigger: \"Ask Gender\"\n  }, {\n    id: \"Ask Gender\",\n    message: \"Vous-êtes un homme ou une femme ?\",\n    trigger: \"gender\"\n  }, {\n    id: \"gender\",\n    options: [{\n      value: \"Homme\",\n      label: \"Homme\",\n      trigger: \"Ask Name\"\n    }, {\n      value: \"Femme\",\n      label: \"Femme\",\n      trigger: \"Ask Name\"\n    }]\n  }, {\n    id: \"Ask Name\",\n    message: \"Merci, quel est votre prénom\",\n    trigger: \"Waiting user input for name\"\n  }, {\n    id: \"Waiting user input for name\",\n    user: true,\n    trigger: \"Asking for name\"\n  }, {\n    id: \"Asking for name\",\n    message: \"Enchanté {previousValue}, Joli prénom\",\n    trigger: \"Asking for birthdate\"\n  }, {\n    id: \"Asking for birthdate\",\n    message: \"Quelle est votre date de naissance ? (format dd.mm.yyyy souhaité)\",\n    trigger: \"Waiting for birthdate input\"\n  }, {\n    id: \"Waiting for birthdate input\",\n    user: true,\n    validator: value => {\n      if (checkDateValidity(value)) {\n        console.log('valid date');\n        return true;\n      }\n\n      console.log('not valid date');\n      return 'Date invalide';\n    },\n    trigger: 'Done'\n  }, {\n    id: 'Done',\n    component: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" Merci \", gender.value, \" \"),\n    end: true\n  }];\n  return React.createElement(ChatBot, Object.assign({\n    steps: steps\n  }, config, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n}\n\nexport default BnpChatbot;","map":{"version":3,"sources":["C:\\Users\\choko\\Projects\\bnp chatbot\\src\\components\\chatbot\\BnpChatbot.js"],"names":["React","ChatBot","moment","checkDateValidity","value","dateEntered","isValid","now","BnpChatbot","props","config","width","height","floating","gender","steps","id","message","trigger","options","label","user","validator","console","log","component","end"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAMC,WAAW,GAAGD,KAApB;;AACA,MAAIF,MAAM,CAACG,WAAD,EAAc,YAAd,EAA4B,IAA5B,CAAN,CAAwCC,OAAxC,MAAsDJ,MAAM,CAACG,WAAD,EAAc,YAAd,EAA4B,IAA5B,CAAN,GAA0CH,MAAM,CAACK,GAAP,EAApG,EAAmH;AAC/G,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ;;AAGD,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAGvB,QAAMC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,MAAM,EAAE,OAFG;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAAf;AAMA,MAAIC,MAAM,GAAGC,KAAK,CAACD,MAAN,CAAaV,KAA1B;AAGA,QAAMW,KAAK,GAAG,CACV;AACIC,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,OAAO,EAAE,mCAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GADU,EAMV;AACIF,IAAAA,EAAE,EAAE,YADR;AAEIC,IAAAA,OAAO,EAAE,mCAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GANU,EAWV;AACIF,IAAAA,EAAE,EAAE,QADR;AAEIG,IAAAA,OAAO,EAAE,CACL;AAACf,MAAAA,KAAK,EAAE,OAAR;AAAiBgB,MAAAA,KAAK,EAAE,OAAxB;AAAiCF,MAAAA,OAAO,EAAE;AAA1C,KADK,EAEL;AAACd,MAAAA,KAAK,EAAE,OAAR;AAAiBgB,MAAAA,KAAK,EAAE,OAAxB;AAAiCF,MAAAA,OAAO,EAAE;AAA1C,KAFK;AAFb,GAXU,EAkBV;AACIF,IAAAA,EAAE,EAAE,UADR;AAEIC,IAAAA,OAAO,EAAE,8BAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GAlBU,EAuBV;AACIF,IAAAA,EAAE,EAAE,6BADR;AAEIK,IAAAA,IAAI,EAAE,IAFV;AAGIH,IAAAA,OAAO,EAAE;AAHb,GAvBU,EA4BV;AACIF,IAAAA,EAAE,EAAE,iBADR;AAEIC,IAAAA,OAAO,EAAE,uCAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GA5BU,EAiCV;AACIF,IAAAA,EAAE,EAAE,sBADR;AAEIC,IAAAA,OAAO,EAAE,mEAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GAjCU,EAuCV;AACIF,IAAAA,EAAE,EAAE,6BADR;AAEIK,IAAAA,IAAI,EAAE,IAFV;AAIIC,IAAAA,SAAS,EAAGlB,KAAD,IAAW;AAClB,UAAID,iBAAiB,CAACC,KAAD,CAArB,EAA8B;AAC1BmB,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,eAAO,IAAP;AACH;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAO,eAAP;AACH,KAXL;AAYIN,IAAAA,OAAO,EAAE;AAZb,GAvCU,EAqDV;AACIF,IAAAA,EAAE,EAAE,MADR;AAEIS,IAAAA,SAAS,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaX,MAAM,CAACV,KAApB,MAHR;AAKIsB,IAAAA,GAAG,EAAE;AALT,GArDU,CAAd;AA6DA,SAAO,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEX;AAAhB,KAA2BL,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,eAAeF,UAAf","sourcesContent":["import React from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport moment from \"moment\";\r\n\r\nfunction checkDateValidity(value) {\r\n    const dateEntered = value;\r\n    if (moment(dateEntered, \"DD.MM.YYYY\", true).isValid() && (moment(dateEntered, \"DD.MM.YYYY\", true) < moment.now())) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\n\r\nfunction BnpChatbot(props) {\r\n\r\n\r\n    const config = {\r\n        width: \"300px\",\r\n        height: \"400px\",\r\n        floating: true\r\n    };\r\n\r\n    let gender = steps.gender.value;\r\n\r\n\r\n    const steps = [\r\n        {\r\n            id: \"Greet\",\r\n            message: \"Hello, Welcome to our BNP Chatbot\",\r\n            trigger: \"Ask Gender\"\r\n        },\r\n        {\r\n            id: \"Ask Gender\",\r\n            message: \"Vous-êtes un homme ou une femme ?\",\r\n            trigger: \"gender\"\r\n        },\r\n        {\r\n            id: \"gender\",\r\n            options: [\r\n                {value: \"Homme\", label: \"Homme\", trigger: \"Ask Name\"},\r\n                {value: \"Femme\", label: \"Femme\", trigger: \"Ask Name\"}\r\n            ]\r\n        },\r\n        {\r\n            id: \"Ask Name\",\r\n            message: \"Merci, quel est votre prénom\",\r\n            trigger: \"Waiting user input for name\"\r\n        },\r\n        {\r\n            id: \"Waiting user input for name\",\r\n            user: true,\r\n            trigger: \"Asking for name\"\r\n        },\r\n        {\r\n            id: \"Asking for name\",\r\n            message: \"Enchanté {previousValue}, Joli prénom\",\r\n            trigger: \"Asking for birthdate\"\r\n        },\r\n        {\r\n            id: \"Asking for birthdate\",\r\n            message: \"Quelle est votre date de naissance ? (format dd.mm.yyyy souhaité)\",\r\n            trigger: \"Waiting for birthdate input\"\r\n        },\r\n\r\n        {\r\n            id: \"Waiting for birthdate input\",\r\n            user: true,\r\n\r\n            validator: (value) => {\r\n                if (checkDateValidity(value)) {\r\n                    console.log('valid date')\r\n                    return true;\r\n                }\r\n                console.log('not valid date');\r\n                return 'Date invalide';\r\n            },\r\n            trigger: 'Done',\r\n        },\r\n        {\r\n            id: 'Done',\r\n            component: (\r\n                <div> Merci {gender.value} </div>\r\n            ),\r\n            end: true,\r\n        }\r\n    ];\r\n    return <ChatBot steps={steps} {...config} />;\r\n}\r\n\r\nexport default BnpChatbot;\r\n"]},"metadata":{},"sourceType":"module"}