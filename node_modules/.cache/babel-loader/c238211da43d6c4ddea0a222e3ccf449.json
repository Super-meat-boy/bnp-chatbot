{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\choko\\\\Projects\\\\bnp chatbot\\\\src\\\\components\\\\chatbot\\\\BnpChatbot.js\";\nimport React from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport moment from \"moment\";\n\nfunction checkDateValidity(value) {\n  const dateEntered = value;\n\n  if (moment(dateEntered, \"DD.MM.YYYY\", true).isValid() && moment(dateEntered, \"DD.MM.YYYY\", true) < moment.now()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction calculateAge(birthday) {\n  // birthday is a date\n  const today = new Date();\n  const birthDate = new Date(birthday);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  let m = today.getMonth() - birthDate.getMonth();\n\n  if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n    age--;\n    console.log(age);\n  }\n\n  if (age >= 18) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nclass BnpChatbot extends React.Component {\n  // componentDidMount() {\n  //     this.handleEnd = this.handleEnd.bind(this);\n  //     const {steps} = this.props;\n  // }\n  constructor(props) {\n    super(props);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.state = {};\n  }\n\n  handleEnd({\n    steps,\n    values\n  }) {\n    this.state.gender = \"\".concat(values[0]);\n    this.state.name = \"\".concat(values[1]);\n    this.state.birth = \"\".concat(values[2]);\n    console.log(this.state.name);\n    console.log(this.state.gender);\n    console.log(this.state.birth);\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          gender = _this$state.gender,\n          birth = _this$state.birth;\n    const config = {\n      width: \"300px\",\n      height: \"400px\",\n      floating: true\n    };\n    const steps = [{\n      id: \"Greet\",\n      message: \"Hello, Welcome to our BNP Chatbot\",\n      trigger: \"Ask Gender\"\n    }, {\n      id: \"Ask Gender\",\n      message: \"Vous-êtes un homme ou une femme ?\",\n      trigger: \"gender\"\n    }, {\n      id: \"gender\",\n      options: [{\n        value: \"Homme\",\n        label: \"Homme\",\n        trigger: \"Ask Name\"\n      }, {\n        value: \"Femme\",\n        label: \"Femme\",\n        trigger: \"Ask Name\"\n      }]\n    }, {\n      id: \"Ask Name\",\n      message: \"Merci, quel est votre prénom\",\n      trigger: \"name\"\n    }, {\n      id: \"name\",\n      user: true,\n      trigger: \"Personalize Greetings\"\n    }, {\n      id: \"Personalize Greetings\",\n      message: \"Enchanté {previousValue}, Joli prénom\",\n      trigger: \"Asking for birthdate\"\n    }, {\n      id: \"Asking for birthdate\",\n      message: \"Quelle est votre date de naissance ? (format dd.mm.yyyy souhaité)\",\n      trigger: \"Waiting for birthdate input\"\n    }, {\n      id: \"Waiting for birthdate input\",\n      user: true,\n      validator: value => {\n        // if (checkDateValidity(value)) {\n        //     return true;\n        // }\n        // return 'invalid date'\n        if (calculateAge(value)) {\n          console.log('majeur');\n          return true;\n        }\n\n        console.log('mineur');\n        return 'mineur';\n      },\n      trigger: 'Done'\n    }, {\n      id: 'Done',\n      message: \"Merci :\" + this.steps.name._currentValue,\n      end: true\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(ChatBot, Object.assign({\n      steps: steps\n    }, config, {\n      handleEnd: this.handleEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"COUCOU\"));\n  }\n\n}\n\nexport default BnpChatbot;","map":{"version":3,"sources":["C:\\Users\\choko\\Projects\\bnp chatbot\\src\\components\\chatbot\\BnpChatbot.js"],"names":["React","ChatBot","moment","checkDateValidity","value","dateEntered","isValid","now","calculateAge","birthday","today","Date","birthDate","age","getFullYear","m","getMonth","getDate","console","log","BnpChatbot","Component","constructor","props","handleEnd","bind","state","steps","values","gender","name","birth","render","config","width","height","floating","id","message","trigger","options","label","user","validator","_currentValue","end"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport moment from \"moment\";\r\n\r\nfunction checkDateValidity(value) {\r\n    const dateEntered = value;\r\n    if (moment(dateEntered, \"DD.MM.YYYY\", true).isValid() && (moment(dateEntered, \"DD.MM.YYYY\", true) < moment.now())) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction calculateAge(birthday) { // birthday is a date\r\n\r\n    const today = new Date();\r\n    const birthDate = new Date(birthday);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    let m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n        console.log(age);\r\n    }\r\n\r\n\r\n    if (age >= 18) {\r\n        return true;\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\n\r\nclass BnpChatbot extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     this.handleEnd = this.handleEnd.bind(this);\r\n    //     const {steps} = this.props;\r\n    // }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEnd = this.handleEnd.bind(this);\r\n\r\n\r\n        this.state = {\r\n        };\r\n\r\n\r\n    }\r\n\r\n    handleEnd({steps, values}) {\r\n\r\n        this.state.gender = `${values[0]}`;\r\n        this.state.name = `${values[1]}`;\r\n        this.state.birth = `${values[2]}`;\r\n        console.log(this.state.name);\r\n        console.log(this.state.gender);\r\n        console.log(this.state.birth);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {name, gender, birth} = this.state;\r\n\r\n        const config = {\r\n            width: \"300px\",\r\n            height: \"400px\",\r\n            floating: true\r\n        };\r\n\r\n\r\n        const steps = [\r\n            {\r\n                id: \"Greet\",\r\n                message: \"Hello, Welcome to our BNP Chatbot\",\r\n                trigger: \"Ask Gender\"\r\n            },\r\n            {\r\n                id: \"Ask Gender\",\r\n                message: \"Vous-êtes un homme ou une femme ?\",\r\n                trigger: \"gender\"\r\n            },\r\n            {\r\n                id: \"gender\",\r\n                options: [\r\n                    {value: \"Homme\", label: \"Homme\", trigger: \"Ask Name\"},\r\n                    {value: \"Femme\", label: \"Femme\", trigger: \"Ask Name\"}\r\n                ]\r\n            },\r\n            {\r\n                id: \"Ask Name\",\r\n                message: \"Merci, quel est votre prénom\",\r\n                trigger: \"name\"\r\n            },\r\n            {\r\n                id: \"name\",\r\n                user: true,\r\n                trigger: \"Personalize Greetings\"\r\n            },\r\n            {\r\n                id: \"Personalize Greetings\",\r\n                message: \"Enchanté {previousValue}, Joli prénom\",\r\n                trigger: \"Asking for birthdate\"\r\n            },\r\n            {\r\n                id: \"Asking for birthdate\",\r\n                message: \"Quelle est votre date de naissance ? (format dd.mm.yyyy souhaité)\",\r\n                trigger: \"Waiting for birthdate input\"\r\n            },\r\n\r\n            {\r\n                id: \"Waiting for birthdate input\",\r\n                user: true,\r\n\r\n                validator: (value) => {\r\n\r\n                    // if (checkDateValidity(value)) {\r\n                    //     return true;\r\n                    // }\r\n                    // return 'invalid date'\r\n\r\n                    if (calculateAge(value)) {\r\n                        console.log('majeur');\r\n                        return true;\r\n                    }\r\n                    console.log('mineur');\r\n                    return 'mineur';\r\n                },\r\n\r\n                trigger: 'Done',\r\n            },\r\n            {\r\n                id: 'Done',\r\n                message: \"Merci :\" + this.steps.name._currentValue,\r\n                end: true,\r\n            },\r\n\r\n        ];\r\n        return <div>\r\n            <ChatBot steps={steps} {...config} handleEnd={this.handleEnd}/>\r\n            <div>COUCOU</div>\r\n        </div>\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default BnpChatbot;\r\n"]},"metadata":{},"sourceType":"module"}