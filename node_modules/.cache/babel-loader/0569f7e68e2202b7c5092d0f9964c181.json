{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\choko\\\\Projects\\\\bnp chatbot\\\\src\\\\components\\\\chatbot\\\\BnpChatbot.js\";\nimport React from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport moment from \"moment\";\n\nfunction checkDateValidity(value) {\n  const dateEntered = value;\n\n  if (moment(dateEntered, \"DD.MM.YYYY\", true).isValid() && moment(dateEntered, \"DD.MM.YYYY\", true) < moment.now()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nclass BnpChatbot extends React.Component {\n  constructor(props) {\n    super(props);\n    render();\n    {\n      const config = {\n        width: \"300px\",\n        height: \"400px\",\n        floating: true\n      };\n      const steps = [{\n        id: \"Greet\",\n        message: \"Hello, Welcome to our BNP Chatbot\",\n        trigger: \"Ask Gender\"\n      }, {\n        id: \"Ask Gender\",\n        message: \"Vous-êtes un homme ou une femme ?\",\n        trigger: \"gender\"\n      }, {\n        id: \"gender\",\n        options: [{\n          value: \"Homme\",\n          label: \"Homme\",\n          trigger: \"Ask Name\"\n        }, {\n          value: \"Femme\",\n          label: \"Femme\",\n          trigger: \"Ask Name\"\n        }]\n      }, {\n        id: \"Ask Name\",\n        message: \"Merci, quel est votre prénom\",\n        trigger: \"Waiting user input for name\"\n      }, {\n        id: \"Waiting user input for name\",\n        user: true,\n        trigger: \"Asking for name\"\n      }, {\n        id: \"Asking for name\",\n        message: \"Enchanté {previousValue}, Joli prénom\",\n        trigger: \"Asking for birthdate\"\n      }, {\n        id: \"Asking for birthdate\",\n        message: \"Quelle est votre date de naissance ? (format dd.mm.yyyy souhaité)\",\n        trigger: \"Waiting for birthdate input\"\n      }, {\n        id: \"Waiting for birthdate input\",\n        user: true,\n        validator: value => {\n          if (checkDateValidity(value)) {\n            console.log('valid date');\n            return true;\n          }\n\n          console.log('not valid date');\n          return 'Date invalide';\n        },\n        trigger: 'Done'\n      }, {\n        id: 'Done',\n        component: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \" Merci \"),\n        end: true\n      }];\n      return React.createElement(ChatBot, Object.assign({\n        steps: steps\n      }, config, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\choko\\Projects\\bnp chatbot\\src\\components\\chatbot\\BnpChatbot.js"],"names":["React","ChatBot","moment","checkDateValidity","value","dateEntered","isValid","now","BnpChatbot","Component","constructor","props","render","config","width","height","floating","steps","id","message","trigger","options","label","user","validator","console","log","component","end"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAMC,WAAW,GAAGD,KAApB;;AACA,MAAIF,MAAM,CAACG,WAAD,EAAc,YAAd,EAA4B,IAA5B,CAAN,CAAwCC,OAAxC,MAAsDJ,MAAM,CAACG,WAAD,EAAc,YAAd,EAA4B,IAA5B,CAAN,GAA0CH,MAAM,CAACK,GAAP,EAApG,EAAmH;AAC/G,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ;;AAED,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,MAAM;AACN;AAEI,YAAMC,MAAM,GAAG;AACXC,QAAAA,KAAK,EAAE,OADI;AAEXC,QAAAA,MAAM,EAAE,OAFG;AAGXC,QAAAA,QAAQ,EAAE;AAHC,OAAf;AAMA,YAAMC,KAAK,GAAG,CACV;AACIC,QAAAA,EAAE,EAAE,OADR;AAEIC,QAAAA,OAAO,EAAE,mCAFb;AAGIC,QAAAA,OAAO,EAAE;AAHb,OADU,EAMV;AACIF,QAAAA,EAAE,EAAE,YADR;AAEIC,QAAAA,OAAO,EAAE,mCAFb;AAGIC,QAAAA,OAAO,EAAE;AAHb,OANU,EAWV;AACIF,QAAAA,EAAE,EAAE,QADR;AAEIG,QAAAA,OAAO,EAAE,CACL;AAACjB,UAAAA,KAAK,EAAE,OAAR;AAAiBkB,UAAAA,KAAK,EAAE,OAAxB;AAAiCF,UAAAA,OAAO,EAAE;AAA1C,SADK,EAEL;AAAChB,UAAAA,KAAK,EAAE,OAAR;AAAiBkB,UAAAA,KAAK,EAAE,OAAxB;AAAiCF,UAAAA,OAAO,EAAE;AAA1C,SAFK;AAFb,OAXU,EAkBV;AACIF,QAAAA,EAAE,EAAE,UADR;AAEIC,QAAAA,OAAO,EAAE,8BAFb;AAGIC,QAAAA,OAAO,EAAE;AAHb,OAlBU,EAuBV;AACIF,QAAAA,EAAE,EAAE,6BADR;AAEIK,QAAAA,IAAI,EAAE,IAFV;AAGIH,QAAAA,OAAO,EAAE;AAHb,OAvBU,EA4BV;AACIF,QAAAA,EAAE,EAAE,iBADR;AAEIC,QAAAA,OAAO,EAAE,uCAFb;AAGIC,QAAAA,OAAO,EAAE;AAHb,OA5BU,EAiCV;AACIF,QAAAA,EAAE,EAAE,sBADR;AAEIC,QAAAA,OAAO,EAAE,mEAFb;AAGIC,QAAAA,OAAO,EAAE;AAHb,OAjCU,EAuCV;AACIF,QAAAA,EAAE,EAAE,6BADR;AAEIK,QAAAA,IAAI,EAAE,IAFV;AAIIC,QAAAA,SAAS,EAAGpB,KAAD,IAAW;AAClB,cAAID,iBAAiB,CAACC,KAAD,CAArB,EAA8B;AAC1BqB,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,mBAAO,IAAP;AACH;;AACDD,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,iBAAO,eAAP;AACH,SAXL;AAYIN,QAAAA,OAAO,EAAE;AAZb,OAvCU,EAqDV;AACIF,QAAAA,EAAE,EAAE,MADR;AAEIS,QAAAA,SAAS,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHR;AAKIC,QAAAA,GAAG,EAAE;AALT,OArDU,CAAd;AA6DA,aAAO,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEX;AAAhB,SAA2BJ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;AACJ;;AA3EoC","sourcesContent":["import React from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport moment from \"moment\";\r\n\r\nfunction checkDateValidity(value) {\r\n    const dateEntered = value;\r\n    if (moment(dateEntered, \"DD.MM.YYYY\", true).isValid() && (moment(dateEntered, \"DD.MM.YYYY\", true) < moment.now())) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nclass BnpChatbot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        render()\r\n        {\r\n\r\n            const config = {\r\n                width: \"300px\",\r\n                height: \"400px\",\r\n                floating: true\r\n            };\r\n\r\n            const steps = [\r\n                {\r\n                    id: \"Greet\",\r\n                    message: \"Hello, Welcome to our BNP Chatbot\",\r\n                    trigger: \"Ask Gender\"\r\n                },\r\n                {\r\n                    id: \"Ask Gender\",\r\n                    message: \"Vous-êtes un homme ou une femme ?\",\r\n                    trigger: \"gender\"\r\n                },\r\n                {\r\n                    id: \"gender\",\r\n                    options: [\r\n                        {value: \"Homme\", label: \"Homme\", trigger: \"Ask Name\"},\r\n                        {value: \"Femme\", label: \"Femme\", trigger: \"Ask Name\"}\r\n                    ]\r\n                },\r\n                {\r\n                    id: \"Ask Name\",\r\n                    message: \"Merci, quel est votre prénom\",\r\n                    trigger: \"Waiting user input for name\"\r\n                },\r\n                {\r\n                    id: \"Waiting user input for name\",\r\n                    user: true,\r\n                    trigger: \"Asking for name\"\r\n                },\r\n                {\r\n                    id: \"Asking for name\",\r\n                    message: \"Enchanté {previousValue}, Joli prénom\",\r\n                    trigger: \"Asking for birthdate\"\r\n                },\r\n                {\r\n                    id: \"Asking for birthdate\",\r\n                    message: \"Quelle est votre date de naissance ? (format dd.mm.yyyy souhaité)\",\r\n                    trigger: \"Waiting for birthdate input\"\r\n                },\r\n\r\n                {\r\n                    id: \"Waiting for birthdate input\",\r\n                    user: true,\r\n\r\n                    validator: (value) => {\r\n                        if (checkDateValidity(value)) {\r\n                            console.log('valid date')\r\n                            return true;\r\n                        }\r\n                        console.log('not valid date');\r\n                        return 'Date invalide';\r\n                    },\r\n                    trigger: 'Done',\r\n                },\r\n                {\r\n                    id: 'Done',\r\n                    component: (\r\n                        <div> Merci </div>\r\n                    ),\r\n                    end: true,\r\n                }\r\n            ];\r\n            return <ChatBot steps={steps} {...config} />;\r\n        }\r\n    }\r\n\r\n    export\r\n    default\r\n    BnpChatbot;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}