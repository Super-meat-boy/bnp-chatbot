{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\choko\\\\Projects\\\\bnp chatbot\\\\src\\\\components\\\\chatbot\\\\BnpChatbot.js\";\nimport React from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\n\nfunction BnpChatbot(props) {\n  const config = {\n    width: \"300px\",\n    height: \"400px\",\n    floating: true\n  };\n  const steps = [{\n    id: \"Greet\",\n    message: \"Hello, Welcome to our BNP Chatbot\",\n    trigger: \"Ask Gender\"\n  }, {\n    id: \"Ask Gender\",\n    message: \"Vous-êtes un homme ou une femme ?\",\n    trigger: \"Displaying gender options\"\n  }, {\n    id: \"Displaying gender options\",\n    options: [{\n      value: \"Homme\",\n      label: \"Homme\",\n      trigger: \"Ask Name\"\n    }, {\n      value: \"Femme\",\n      label: \"Femme\",\n      trigger: \"Ask Name\"\n    }]\n  }, {\n    id: \"Ask Name\",\n    message: \"Merci, quel est votre prénom\",\n    trigger: \"Waiting user input for name\"\n  }, {\n    id: \"Waiting user input for name\",\n    user: true,\n    trigger: \"Asking for name\"\n  }, {\n    id: \"Asking for name\",\n    message: \"Enchanté {previousValue}, Joli prénom\",\n    trigger: \"Asking for birthdate\"\n  }, {\n    id: \"Asking for birthdate\",\n    message: \"Quelle est votre date de naissance ?\",\n    trigger: \"Waiting for birthdate input\"\n  }, {\n    id: \"Waiting for birthdate input\",\n    user: true,\n    validator: value => {\n      if (isNaN(value)) {\n        return 'Merci de fournir une date de naissance inférieure à la date du jour';\n      }\n\n      return true;\n    },\n    trigger: 'Done'\n  }, {\n    id: \"Done\",\n    message: \"Have a great day !!\",\n    end: true\n  }];\n  return React.createElement(ChatBot, Object.assign({\n    steps: steps\n  }, config, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\nexport default BnpChatbot;","map":{"version":3,"sources":["C:\\Users\\choko\\Projects\\bnp chatbot\\src\\components\\chatbot\\BnpChatbot.js"],"names":["React","ChatBot","BnpChatbot","props","config","width","height","floating","steps","id","message","trigger","options","value","label","user","validator","isNaN","end"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB,QAAMC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,MAAM,EAAE,OAFG;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAAf;AAMA,QAAMC,KAAK,GAAG,CACV;AACIC,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,OAAO,EAAE,mCAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GADU,EAMV;AACIF,IAAAA,EAAE,EAAE,YADR;AAEIC,IAAAA,OAAO,EAAE,mCAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GANU,EAWV;AACIF,IAAAA,EAAE,EAAE,2BADR;AAEIG,IAAAA,OAAO,EAAE,CACL;AACIC,MAAAA,KAAK,EAAE,OADX;AAEIC,MAAAA,KAAK,EAAE,OAFX;AAGIH,MAAAA,OAAO,EAAE;AAHb,KADK,EAML;AACIE,MAAAA,KAAK,EAAE,OADX;AAEIC,MAAAA,KAAK,EAAE,OAFX;AAGIH,MAAAA,OAAO,EAAE;AAHb,KANK;AAFb,GAXU,EA0BV;AACIF,IAAAA,EAAE,EAAE,UADR;AAEIC,IAAAA,OAAO,EAAE,8BAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GA1BU,EA+BV;AACIF,IAAAA,EAAE,EAAE,6BADR;AAEIM,IAAAA,IAAI,EAAE,IAFV;AAGIJ,IAAAA,OAAO,EAAE;AAHb,GA/BU,EAoCV;AACIF,IAAAA,EAAE,EAAE,iBADR;AAEIC,IAAAA,OAAO,EAAE,uCAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GApCU,EAyCV;AACIF,IAAAA,EAAE,EAAE,sBADR;AAEIC,IAAAA,OAAO,EAAE,sCAFb;AAGIC,IAAAA,OAAO,EAAE;AAHb,GAzCU,EA+CV;AACIF,IAAAA,EAAE,EAAE,6BADR;AAEIM,IAAAA,IAAI,EAAE,IAFV;AAGIC,IAAAA,SAAS,EAAGH,KAAD,IAAW;AAClB,UAAII,KAAK,CAACJ,KAAD,CAAT,EAAkB;AACd,eAAO,qEAAP;AACH;;AACD,aAAO,IAAP;AACH,KARL;AASIF,IAAAA,OAAO,EAAE;AATb,GA/CU,EA0DV;AACIF,IAAAA,EAAE,EAAE,MADR;AAEIC,IAAAA,OAAO,EAAE,qBAFb;AAGIQ,IAAAA,GAAG,EAAE;AAHT,GA1DU,CAAd;AAgEA,SAAO,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEV;AAAhB,KAA2BJ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AACD,eAAeF,UAAf","sourcesContent":["import React from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nfunction BnpChatbot(props) {\r\n\r\n    const config = {\r\n        width: \"300px\",\r\n        height: \"400px\",\r\n        floating: true\r\n    };\r\n\r\n    const steps = [\r\n        {\r\n            id: \"Greet\",\r\n            message: \"Hello, Welcome to our BNP Chatbot\",\r\n            trigger: \"Ask Gender\"\r\n        },\r\n        {\r\n            id: \"Ask Gender\",\r\n            message: \"Vous-êtes un homme ou une femme ?\",\r\n            trigger: \"Displaying gender options\"\r\n        },\r\n        {\r\n            id: \"Displaying gender options\",\r\n            options: [\r\n                {\r\n                    value: \"Homme\",\r\n                    label: \"Homme\",\r\n                    trigger: \"Ask Name\"\r\n                },\r\n                {\r\n                    value: \"Femme\",\r\n                    label: \"Femme\",\r\n                    trigger: \"Ask Name\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: \"Ask Name\",\r\n            message: \"Merci, quel est votre prénom\",\r\n            trigger: \"Waiting user input for name\"\r\n        },\r\n        {\r\n            id: \"Waiting user input for name\",\r\n            user: true,\r\n            trigger: \"Asking for name\"\r\n        },\r\n        {\r\n            id: \"Asking for name\",\r\n            message: \"Enchanté {previousValue}, Joli prénom\",\r\n            trigger: \"Asking for birthdate\"\r\n        },\r\n        {\r\n            id: \"Asking for birthdate\",\r\n            message: \"Quelle est votre date de naissance ?\",\r\n            trigger: \"Waiting for birthdate input\"\r\n        },\r\n\r\n        {\r\n            id: \"Waiting for birthdate input\",\r\n            user: true,\r\n            validator: (value) => {\r\n                if (isNaN(value)) {\r\n                    return 'Merci de fournir une date de naissance inférieure à la date du jour';\r\n                }\r\n                return true;\r\n            },\r\n            trigger: 'Done',\r\n        },\r\n        {\r\n            id: \"Done\",\r\n            message: \"Have a great day !!\",\r\n            end: true\r\n        }\r\n    ];\r\n    return <ChatBot steps={steps} {...config} />;\r\n}\r\nexport default BnpChatbot;\r\n"]},"metadata":{},"sourceType":"module"}